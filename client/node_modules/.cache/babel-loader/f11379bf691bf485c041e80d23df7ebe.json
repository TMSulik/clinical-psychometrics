{"ast":null,"code":"var _jsxFileName = \"/Users/TMSulik/Dropbox/UW/clinical-psychometrics/client/src/components/TAT.js\";\nimport React from \"react\"; // import TextInput from '../components/TextInput';\n// import { tats } from '../services/Pictures';\n// import { randomize } from '../services/Shuffle';\n\nimport '../App.css'; // import { AppRegistry, TextInput } from 'react-native';\n\nclass TAT extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // past: \"placeholder\",\n      themes: {\n        past: String,\n        present: String,\n        future: String,\n        feelings: String\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"THEMATIC APPERCEPTION TEST\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \" Tell the most dramatic story you can think of about this picture.\"), React.createElement(\"img\", {\n      src: require(\"../images/tat-31.jpg\"),\n      alt: \"apperception\",\n      className: \"tat-image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"tat-directions clearfix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"What led up to the event depicted?\"), React.createElement(\"textarea\", {\n      name: \"body\",\n      className: \"text-field\",\n      onChangeText: past => this.setState({\n        past\n      }),\n      value: this.state.past,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"What is happening at the moment?\"), React.createElement(\"textarea\", {\n      name: \"body\",\n      className: \"text-field\",\n      onChange: present => this.setState({\n        present\n      }),\n      value: this.state.present,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"What the people are feeling and thinking?\"), React.createElement(\"textarea\", {\n      name: \"body\",\n      className: \"text-field\",\n      onChange: feeling => this.setState({\n        feeling\n      }),\n      value: this.state.feeling,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"What will be a likely outcome?\"), React.createElement(\"textarea\", {\n      name: \"body\",\n      className: \"text-field\",\n      onChange: future => this.setState({\n        future\n      }),\n      value: this.state.future,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-default tat-submit\",\n      onClick: this.save,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default TAT;\n/* \nDidn't work:\n  <textarea name=\"body\"\n    className=\"text-field\"\n    onChangeText={(past) => this.setState({past})}\n    value={this.state.past}\n  />\n\n  <TextInput\n              {...this.props} // Inherit any props passed to it; e.g., multiline, numberOfLines below\n              editable = {true}\n              maxLength = {40}\n            />\n\n*/","map":{"version":3,"sources":["/Users/TMSulik/Dropbox/UW/clinical-psychometrics/client/src/components/TAT.js"],"names":["React","TAT","Component","state","themes","past","String","present","future","feelings","render","require","setState","feeling","save"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;;AACA,OAAO,YAAP,C,CAEA;;AACA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AACN;AACAC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAEC,MADA;AAENC,QAAAA,OAAO,EAAED,MAFH;AAGNE,QAAAA,MAAM,EAAEF,MAHF;AAING,QAAAA,QAAQ,EAAEH;AAJJ;AAFF,KAFwB;AAAA;;AAYhCI,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4EAFF,EAGE;AAAK,MAAA,GAAG,EAAEC,OAAO,wBAAjB;AAA2C,MAAA,GAAG,EAAC,cAA/C;AAA8D,MAAA,SAAS,EAAC,WAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF,EAEE;AAAU,MAAA,IAAI,EAAC,MAAf;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,YAAY,EAAGN,IAAD,IAAU,KAAKO,QAAL,CAAc;AAACP,QAAAA;AAAD,OAAd,CAF1B;AAGE,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,IAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CATF,EAUE;AAAU,MAAA,IAAI,EAAC,MAAf;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,QAAQ,EAAGE,OAAD,IAAa,KAAKK,QAAL,CAAc;AAACL,QAAAA;AAAD,OAAd,CAFzB;AAGE,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWI,OAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAfF,EAgBE;AAAU,MAAA,IAAI,EAAC,MAAf;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,QAAQ,EAAGM,OAAD,IAAa,KAAKD,QAAL,CAAc;AAACC,QAAAA;AAAD,OAAd,CAFzB;AAGE,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWU,OAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,EAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCArBF,EAsBE;AAAU,MAAA,IAAI,EAAC,MAAf;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,QAAQ,EAAGL,MAAD,IAAY,KAAKI,QAAL,CAAc;AAACJ,QAAAA;AAAD,OAAd,CAFxB;AAGE,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWK,MAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBF,EA2BE;AAAQ,MAAA,SAAS,EAAC,4BAAlB;AAA+C,MAAA,OAAO,EAAE,KAAKM,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3BF,CADF,CAJF,CADF;AAsCD;;AAnD+B;;AAuDlC,eAAeb,GAAf;AAEA","sourcesContent":["import React from \"react\";\n// import TextInput from '../components/TextInput';\n// import { tats } from '../services/Pictures';\n// import { randomize } from '../services/Shuffle';\nimport '../App.css';\n\n// import { AppRegistry, TextInput } from 'react-native';\nclass TAT extends React.Component {\n\n  state = { \n    // past: \"placeholder\",\n    themes: { \n      past: String, \n      present: String, \n      future: String, \n      feelings: String \n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>THEMATIC APPERCEPTION TEST</h1>\n        <p> Tell the most dramatic story you can think of about this picture.</p>\n        <img src={require(`../images/tat-31.jpg`)} alt=\"apperception\" className=\"tat-image\" />\n        <div className=\"tat-directions clearfix\">\n          <div className=\"prompt\">\n            <h4>What led up to the event depicted?</h4>\n            <textarea name=\"body\"\n              className=\"text-field\"\n              onChangeText={(past) => this.setState({past})}\n              value={this.state.past}\n            />\n            \n           \n            <h4>What is happening at the moment?</h4>\n            <textarea name=\"body\"\n              className=\"text-field\"\n              onChange={(present) => this.setState({present})}\n              value={this.state.present}\n            />\n            <h4>What the people are feeling and thinking?</h4>\n            <textarea name=\"body\"\n              className=\"text-field\"\n              onChange={(feeling) => this.setState({feeling})}\n              value={this.state.feeling}\n            />\n            <h4>What will be a likely outcome?</h4>\n            <textarea name=\"body\"\n              className=\"text-field\"\n              onChange={(future) => this.setState({future})}\n              value={this.state.future}\n            />\n            <button className=\"btn btn-default tat-submit\" onClick={this.save}>Submit</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default TAT;\n\n/* \nDidn't work:\n  <textarea name=\"body\"\n    className=\"text-field\"\n    onChangeText={(past) => this.setState({past})}\n    value={this.state.past}\n  />\n\n  <TextInput\n              {...this.props} // Inherit any props passed to it; e.g., multiline, numberOfLines below\n              editable = {true}\n              maxLength = {40}\n            />\n\n*/"]},"metadata":{},"sourceType":"module"}