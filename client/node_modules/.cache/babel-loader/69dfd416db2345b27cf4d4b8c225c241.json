{"ast":null,"code":"var _jsxFileName = \"/Users/TMSulik/Dropbox/UW/clinical-psychometrics/client/src/components/TAT.js\";\nimport React from \"react\"; // import TextInput from '../components/TextInput';\n// import { tats } from '../services/Pictures';\n// import { randomize } from '../services/Shuffle';\n\nimport '../App.css'; // import { AppRegistry, TextInput } from 'react-native';\n\nclass TAT extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // value: \"\",\n      formValues: {} // themes: { \n      //   past: String, \n      //   present: String, \n      //   future: String, \n      //   feelings: String \n      // }\n\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    //this.setState({value: event.target.value});\n    let formValues = this.state.formValues;\n    let name = event.target.name; // Field name\n\n    let value = event.target.value; // Field value\n\n    formValues[name] = value;\n    this.setState({\n      formValues\n    });\n    console.log(\"FORM: \", formValues);\n  }\n\n  handleSubmit(event) {\n    alert('A name was submitted: ' + JSON.stringifythis.state.formValues);\n    event.preventDefault();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"THEMATIC APPERCEPTION TEST\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \" Tell the most dramatic story you can think of about this picture.\"), React.createElement(\"img\", {\n      src: require(\"../images/tat-31.jpg\"),\n      alt: \"apperception\",\n      className: \"tat-image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"tat-directions clearfix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"What led up to the event depicted?\"), React.createElement(\"textarea\", {\n      type: \"text\",\n      className: \"text-field\",\n      name: \"past\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"What is happening at the moment?\"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"What the people are feeling and thinking?\"), React.createElement(\"textarea\", {\n      name: \"body\",\n      className: \"text-field\",\n      onChange: feeling => this.setState({\n        feeling\n      }),\n      value: this.state.feeling,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"What will be a likely outcome?\"), React.createElement(\"textarea\", {\n      name: \"body\",\n      className: \"text-field\",\n      onChange: future => this.setState({\n        future\n      }),\n      value: this.state.future,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-default tat-submit\",\n      onClick: this.save,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Submit\")))));\n  }\n\n}\n\nexport default TAT;\n/* \nDidn't work:\n  <textarea name=\"body\"\n    className=\"text-field\"\n    onChangeText={(past) => this.setState({past})}\n    value={this.state.past}\n  />\n\n  <TextInput\n    {...this.props} \n    editable = {true}\n    maxLength = {40}\n  />\n\n*/","map":{"version":3,"sources":["/Users/TMSulik/Dropbox/UW/clinical-psychometrics/client/src/components/TAT.js"],"names":["React","TAT","Component","state","formValues","handleChange","bind","handleSubmit","event","name","target","value","setState","console","log","alert","JSON","stringifythis","preventDefault","render","require","feeling","future","save"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;;AACA,OAAO,YAAP,C,CAEA;;AACA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AACN;AACAC,MAAAA,UAAU,EAAE,EAFN,CAGN;AACA;AACA;AACA;AACA;AACA;;AARM,KAFwB;AAAA,SAahCC,YAbgC,GAajB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAbiB;AAAA,SAchCC,YAdgC,GAcjB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAdiB;AAAA;;AAgBhCD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAClB;AACA,QAAIJ,UAAU,GAAG,KAAKD,KAAL,CAAWC,UAA5B;AACA,QAAIK,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAAxB,CAHkB,CAGY;;AAC9B,QAAIE,KAAK,GAAGH,KAAK,CAACE,MAAN,CAAaC,KAAzB,CAJkB,CAIc;;AAEhCP,IAAAA,UAAU,CAACK,IAAD,CAAV,GAAmBE,KAAnB;AAEA,SAAKC,QAAL,CAAc;AAACR,MAAAA;AAAD,KAAd;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBV,UAAtB;AACD;;AAEDG,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAClBO,IAAAA,KAAK,CAAC,2BAA2BC,IAAI,CAACC,aAAL,CAAmBd,KAAnB,CAAyBC,UAArD,CAAL;AACAI,IAAAA,KAAK,CAACU,cAAN;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4EAFF,EAGE;AAAK,MAAA,GAAG,EAAEC,OAAO,wBAAjB;AAA2C,MAAA,GAAG,EAAC,cAA/C;AAA8D,MAAA,SAAS,EAAC,WAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAM,MAAA,QAAQ,EAAE,KAAKb,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF,EAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC,YAFZ;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWQ,KAJpB;AAKE,MAAA,QAAQ,EAAE,KAAKN,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAVF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAlBF,EAmBE;AAAU,MAAA,IAAI,EAAC,MAAf;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,QAAQ,EAAGgB,OAAD,IAAa,KAAKT,QAAL,CAAc;AAACS,QAAAA;AAAD,OAAd,CAFzB;AAGE,MAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWkB,OAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,EAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAxBF,EAyBE;AAAU,MAAA,IAAI,EAAC,MAAf;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,QAAQ,EAAGC,MAAD,IAAY,KAAKV,QAAL,CAAc;AAACU,QAAAA;AAAD,OAAd,CAFxB;AAGE,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWmB,MAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBF,EA8BE;AAAQ,MAAA,SAAS,EAAC,4BAAlB;AAA+C,MAAA,OAAO,EAAE,KAAKC,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9BF,CADF,CADA,CAJF,CADF;AA4CD;;AA9E+B;;AAkFlC,eAAetB,GAAf;AAEA","sourcesContent":["import React from \"react\";\n// import TextInput from '../components/TextInput';\n// import { tats } from '../services/Pictures';\n// import { randomize } from '../services/Shuffle';\nimport '../App.css';\n\n// import { AppRegistry, TextInput } from 'react-native';\nclass TAT extends React.Component {\n\n  state = { \n    // value: \"\",\n    formValues: {}\n    // themes: { \n    //   past: String, \n    //   present: String, \n    //   future: String, \n    //   feelings: String \n    // }\n  };\n\n  handleChange = this.handleChange.bind(this);\n  handleSubmit = this.handleSubmit.bind(this);\n\n  handleChange(event) {\n    //this.setState({value: event.target.value});\n    let formValues = this.state.formValues;\n    let name = event.target.name; // Field name\n    let value = event.target.value; // Field value\n\n    formValues[name] = value;\n\n    this.setState({formValues})\n    console.log(\"FORM: \", formValues);\n  }\n\n  handleSubmit(event) {\n    alert('A name was submitted: ' + JSON.stringifythis.state.formValues);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>THEMATIC APPERCEPTION TEST</h1>\n        <p> Tell the most dramatic story you can think of about this picture.</p>\n        <img src={require(`../images/tat-31.jpg`)} alt=\"apperception\" className=\"tat-image\" />\n        <div className=\"tat-directions clearfix\">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"prompt\">\n            <h4>What led up to the event depicted?</h4>\n            <textarea \n              type=\"text\" \n              className=\"text-field\"\n              name=\"past\"\n              value={this.state.value} \n              onChange={this.handleChange} \n            />\n            \n            <h4>What is happening at the moment?</h4>\n            {/* <textarea \n              name=\"present\"\n              type=\"text\" \n              className=\"text-field\"\n              value={this.state.value} \n              onChange={this.handleChange} \n            /> */}\n            <h4>What the people are feeling and thinking?</h4>\n            <textarea name=\"body\"\n              className=\"text-field\"\n              onChange={(feeling) => this.setState({feeling})}\n              value={this.state.feeling}\n            />\n            <h4>What will be a likely outcome?</h4>\n            <textarea name=\"body\"\n              className=\"text-field\"\n              onChange={(future) => this.setState({future})}\n              value={this.state.future}\n            />\n            <button className=\"btn btn-default tat-submit\" onClick={this.save}>Submit</button>\n          </div>\n          </form>\n        </div>\n        \n      </div>\n    );\n  }\n\n}\n\nexport default TAT;\n\n/* \nDidn't work:\n  <textarea name=\"body\"\n    className=\"text-field\"\n    onChangeText={(past) => this.setState({past})}\n    value={this.state.past}\n  />\n\n  <TextInput\n    {...this.props} \n    editable = {true}\n    maxLength = {40}\n  />\n\n*/"]},"metadata":{},"sourceType":"module"}