{"ast":null,"code":"var _jsxFileName = \"/Users/TMSulik/Dropbox/UW/clinical-psychometrics/client/src/components/ACL.js\";\nimport React from \"react\";\nimport { adjectives } from '../services/ACL';\nimport { randomize } from '../services/Shuffle';\nimport '../App.css';\n\nclass ACL extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      acl: [],\n      personalTraits: []\n    };\n\n    this.componentDidMount = () => {\n      console.log(\"ACL props: \", this.props);\n      randomize(adjectives);\n      this.setState({\n        acl: adjectives\n      });\n    };\n\n    this.routeChange = () => {\n      const path = \"/profiles\";\n      this.props.history.push(path);\n    };\n\n    this.onSelect = event => {\n      // event.preventDefault(); // You want to maintain all events (checked boxes)\n      // until you click the SUBMIT button \n      const checkedTrait = event.target.name;\n      let traits = this.state.personalTraits;\n\n      if (event.target.checked && !traits.includes(checkedTrait)) {\n        traits.push(checkedTrait);\n      } else {\n        for (let i = 0; i < traits.length; i++) {\n          if (traits[i] === checkedTrait) {\n            traits.splice(i, 1);\n          }\n        }\n      }\n\n      this.setState({\n        personalTraits: traits\n      });\n      console.log(\"Personal traits: \", this.state.personalTraits);\n    };\n\n    this.save = () => {\n      this.routeChange();\n      this.props.onSubmit(this.state.personalTraits);\n    };\n\n    this.renderChecklist = () => {\n      return this.state.acl.map((adj, index) => {\n        return React.createElement(\"li\", {\n          key: index,\n          item: adj,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          name: adj,\n          type: \"checkbox\",\n          defaultChecked: false,\n          onChange: this.onSelect,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }), adj));\n      });\n    };\n  }\n\n  constuctor() {\n    this.routeChange = this.routeChange.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"clearfix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Adjective Checklist\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Check any words that describe yourself\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Click SUBMIT when you are done\")), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"checklist column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.renderChecklist()), React.createElement(\"button\", {\n      className: \"btn btn-default\",\n      onClick: this.save,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })));\n  }\n\n}\n\n;\nexport default ACL;","map":{"version":3,"sources":["/Users/TMSulik/Dropbox/UW/clinical-psychometrics/client/src/components/ACL.js"],"names":["React","adjectives","randomize","ACL","Component","state","acl","personalTraits","componentDidMount","console","log","props","setState","routeChange","path","history","push","onSelect","event","checkedTrait","target","name","traits","checked","includes","i","length","splice","save","onSubmit","renderChecklist","map","adj","index","constuctor","bind","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { adjectives } from '../services/ACL';\nimport { randomize } from '../services/Shuffle';\nimport '../App.css';\nclass ACL extends React.Component {\n\n  state = { \n    acl: [], \n    personalTraits: [] \n  };\n\n  componentDidMount = () => {\n    console.log(\"ACL props: \", this.props);\n    randomize(adjectives);\n    this.setState({ acl: adjectives });\n  }\n\n  constuctor() {\n    this.routeChange = this.routeChange.bind(this);\n  }\n\n  routeChange = () => {\n    const path=\"/profiles\";\n    this.props.history.push(path);\n  }\n\n  onSelect = (event) => {\n    // event.preventDefault(); // You want to maintain all events (checked boxes)\n    // until you click the SUBMIT button \n\n    const checkedTrait = event.target.name;\n    let traits = this.state.personalTraits;\n\n    if(event.target.checked && !traits.includes(checkedTrait)) {\n      traits.push(checkedTrait);\n    } else {\n      for(let i = 0; i < traits.length; i++){ \n        if (traits[i] === checkedTrait) {\n          traits.splice(i, 1); \n        }\n      }\n    }\n    this.setState({ personalTraits: traits });\n\n    console.log(\"Personal traits: \", this.state.personalTraits)\n  \n  };\n\n  save = () => {\n    this.routeChange();\n    this.props.onSubmit(this.state.personalTraits);\n  }\n\n  renderChecklist = () => {    \n    return (\n      this.state.acl.map((adj, index) => {\n        return (\n          <li key={index} item={adj}>\n            <label>\n              <input\n                name={adj}\n                type=\"checkbox\"\n                defaultChecked={false}\n                onChange={this.onSelect} />\n              {adj}\n            </label>\n          </li>  \n        )    \n      })\n    );\n  }\n\n  render() {\n    return (\n    <div className=\"clearfix\">\n      <h1>Adjective Checklist</h1>\n      <ul>\n        <li>Check any words that describe yourself</li>\n        <li>Click SUBMIT when you are done</li>\n      </ul>\n      <div className=\"container\">\n        <ul className=\"checklist column\">\n          {this.renderChecklist()}\n        </ul>\n\n        <button className=\"btn btn-default\" onClick={this.save}>Submit</button>\n        <br/>\n      </div>\n    </div>\n  )};\n};\n\nexport default ACL;\n"]},"metadata":{},"sourceType":"module"}