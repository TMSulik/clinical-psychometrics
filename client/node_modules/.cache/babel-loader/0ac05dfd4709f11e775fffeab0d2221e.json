{"ast":null,"code":"var _jsxFileName = \"/Users/TMSulik/Dropbox/UW/clinical-psychometrics/client/src/components/Profiles.js\";\nimport React from \"react\";\nimport '../App.css';\nimport { needScale, topicalScales, transactionalAnalysis, origenceIntellectance } from '../services/Scales'; // import { tallyScaleItem } from '../services/ProcessScale';\n\nclass Profiles extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      needScale: [],\n      personalTraits: this.props.traits,\n      percent: 1.0,\n      past: this.props.past\n    };\n\n    this.tallyScaleItem = item => {\n      // Get the personal traits the user has checked\n      const traits = this.state.personalTraits;\n      const indic = traits.filter(value => item.indicative.includes(value)).length;\n      const contra = traits.filter(value => item.contraindicative.includes(value)).length; // Get the maximum absolute number of relevant traits\n\n      const pos = item.indicative.length;\n      const neg = item.contraindicative.length;\n      let result = neg; // If no relevant traits are checked, default to 50% (equivocal)\n\n      if (indic + contra === 0) {\n        return (neg + pos) / 2;\n      } // Otherwise, return the proportion of indicative to contraindicative\n\n\n      return result - contra + indic;\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      needScale: needScale\n    });\n    console.log(\"TRAITS in Profiles: \", this.state.personalTraits);\n  }\n\n  renderLines() {\n    const Line = ({\n      left\n    }) => {\n      return React.createElement(\"div\", {\n        className: \"line\",\n        style: {\n          left: \"\".concat(left, \"%\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      });\n    };\n\n    return Array(10).fill(null).map((el, i) => React.createElement(Line, {\n      left: i * 10,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  }\n\n  renderBars() {\n    const Bar = ({\n      percent\n    }) => {\n      return React.createElement(\"div\", {\n        className: \"bar\",\n        style: {\n          width: \"\".concat(percent, \"%\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      });\n    }; // const { needScale } = this.props\n\n\n    const needScale = this.state.needScale;\n    return needScale.map(trait => {\n      const denominator = trait.indicative.length + trait.contraindicative.length;\n      let percent = this.tallyScaleItem(trait) / denominator * 100;\n      return React.createElement(Bar, {\n        percent: percent,\n        key: trait.trait,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      });\n    });\n  }\n\n  renderBarText() {\n    const needScale = this.state.needScale;\n    return React.createElement(\"div\", {\n      className: \"bar-text-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, needScale.map(trait => React.createElement(\"div\", {\n      className: \"text\",\n      key: trait.trait,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, trait.trait)));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Personality Profiles\"), React.createElement(\"div\", {\n      className: \"graph-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"graph-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Need Scale\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Assessment of psychological wants or needs\"), React.createElement(\"div\", {\n      className: \"graph\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.renderBarText(), React.createElement(\"div\", {\n      className: \"bar-lines-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.renderLines(), this.renderBars()))), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"TAT Responses\"), React.createElement(\"div\", {\n      className: \"graph-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"graph-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Picture 31\"), React.createElement(\"div\", {\n      className: \"graph descriptions text-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"clearfix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require(\"../images/tat-29.jpg\"),\n      alt: \"apperception\",\n      className: \"inset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Past\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"A demigod was executed in the Holy Land over two millennia ago. He vowed one day to return to usher in the End of Time.\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Present\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"He is now reigning down from Heaven in all his glory.\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Future\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"He will soon sit at the right hand of the Father to judge the quick and the dead.\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Feelings\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"We are all very afraid: where will YOU spend eternity?\"))))));\n  }\n\n}\n\nexport default Profiles;","map":{"version":3,"sources":["/Users/TMSulik/Dropbox/UW/clinical-psychometrics/client/src/components/Profiles.js"],"names":["React","needScale","topicalScales","transactionalAnalysis","origenceIntellectance","Profiles","Component","state","personalTraits","props","traits","percent","past","tallyScaleItem","item","indic","filter","value","indicative","includes","length","contra","contraindicative","pos","neg","result","componentDidMount","setState","console","log","renderLines","Line","left","Array","fill","map","el","i","renderBars","Bar","width","trait","denominator","renderBarText","render","require"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport '../App.css';\nimport { needScale, topicalScales, transactionalAnalysis, origenceIntellectance } from '../services/Scales';\n// import { tallyScaleItem } from '../services/ProcessScale';\n\nclass Profiles extends React.Component {\n\n  state = { \n    needScale: [],\n    personalTraits: this.props.traits,\n    percent: 1.0,\n    past: this.props.past\n  };\n\n  componentDidMount() {\n    this.setState({ needScale: needScale });\n    console.log(\"TRAITS in Profiles: \", this.state.personalTraits);\n  }\n\n  tallyScaleItem = (item) => {\n    // Get the personal traits the user has checked\n    const traits = this.state.personalTraits;\n    const indic = traits.filter(value => item.indicative.includes(value)).length;\n    const contra = traits.filter(value => item.contraindicative.includes(value)).length;\n    // Get the maximum absolute number of relevant traits\n    const pos = item.indicative.length;\n    const neg = item.contraindicative.length;\n    let result = neg;\n    // If no relevant traits are checked, default to 50% (equivocal)\n    if(indic + contra === 0) {\n      return (neg + pos) / 2;\n    }\n    // Otherwise, return the proportion of indicative to contraindicative\n    return result - contra + indic;\n  }\n\n  renderLines() {\n    const Line = ({left}) => {\n      return (\n        <div \n          className=\"line\"\n          style={{left: `${left}%`}}\n        />\n      )\n    }\n    return Array(10).fill(null).map((el, i) => (\n      <Line \n        left={i * 10}\n        key={i}\n      />\n    ))\n  }\n\n  renderBars() {\n    const Bar = ({percent}) => {\n      return (\n        <div className=\"bar\" style={{width: `${percent}%`}}/>\n      )\n    }\n    // const { needScale } = this.props\n    const needScale = this.state.needScale; \n \n    return needScale.map(trait => {\n      const denominator = trait.indicative.length + trait.contraindicative.length;\n      let percent = (this.tallyScaleItem(trait) / denominator ) * 100;\n      return (\n        <Bar\n          percent={percent}\n          key={trait.trait}\n        />\n      )\n    });\n  }\n\n  renderBarText() {\n    const needScale = this.state.needScale;\n    return (\n      <div className=\"bar-text-content\">\n        {\n          needScale.map((trait) => (\n            <div className=\"text\" key={trait.trait}>\n              {trait.trait}\n            </div>\n          ))\n        }\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Personality Profiles</h1>\n        <div className=\"graph-wrapper\"> \n          <h2 className=\"graph-header\">Need Scale</h2>\n          <p>Assessment of psychological wants or needs</p>         \n          <div className=\"graph\">\n            {this.renderBarText()}\n            <div className=\"bar-lines-container\"> \n              {this.renderLines()}\n              {this.renderBars()}\n            </div> \n          </div>\n        </div>\n        <h1>TAT Responses</h1>\n        <div className=\"graph-wrapper\">\n        <h2 className=\"graph-header\">Picture 31</h2>\n          <div className=\"graph descriptions text-box\">\n\n            <div className=\"clearfix\">\n              \n              <img src={require(`../images/tat-29.jpg`)} alt=\"apperception\" className=\"inset\" />\n              <div >\n                <h3>Past</h3>\n                <p>A demigod was executed in the Holy Land over two millennia ago. He vowed one day to return to usher in the End of Time.</p>\n                <h3>Present</h3>\n                <p>He is now reigning down from Heaven in all his glory.</p>\n                <h3>Future</h3>\n                <p>He will soon sit at the right hand of the Father to judge the quick and the dead.</p>\n                <h3>Feelings</h3>\n                <p>We are all very afraid: where will YOU spend eternity?</p>\n              </div>\n              \n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default Profiles;"]},"metadata":{},"sourceType":"module"}