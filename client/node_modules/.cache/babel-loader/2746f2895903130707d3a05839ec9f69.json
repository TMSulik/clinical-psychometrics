{"ast":null,"code":"var _jsxFileName = \"/Users/TMSulik/Dropbox/UW/clinical-psychometrics/client/src/components/TAT.js\";\nimport React from \"react\";\nimport TextInput from '../components/TextInput';\nimport { tats } from '../services/Pictures';\nimport { randomize } from '../services/Shuffle';\nimport '../App.css';\n\nclass TAT extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tat: [] // past: \"Nonsense\"\n\n    };\n  }\n\n  componentDidMount() {\n    randomize(tats);\n    this.setState({\n      tat: tats\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"THEMATIC APPERCEPTION TEST\"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \" Tell the most dramatic story you can think of about this picture.\"), React.createElement(\"img\", {\n      src: require(\"../images/tat-31.jpg\"),\n      alt: \"apperception\",\n      className: \"tat-image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"tat-directions clearfix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"prompt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Instructions\"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \" Tell the most dramatic story you can think of about this picture.\"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"What led up to the event depicted?\"), React.createElement(\"textarea\", {\n      name: \"body\",\n      className: \"text-field\",\n      onChangeText: past => this.setState({\n        past\n      }),\n      value: this.state.past,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(TextInput, Object.assign({}, this.props, {\n      // Inherit any props passed to it; e.g., multiline, numberOfLines below\n      editable: true,\n      maxLength: 40,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"What is happening at the moment?\"), React.createElement(\"textarea\", {\n      name: \"body\",\n      className: \"text-field\",\n      onChange: present => this.setState({\n        present\n      }),\n      value: this.state.present,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"What the people are feeling and thinking?\"), React.createElement(\"textarea\", {\n      name: \"body\",\n      className: \"text-field\",\n      onChange: feeling => this.setState({\n        feeling\n      }),\n      value: this.state.feeling,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"What will be a likely outcome?\"), React.createElement(\"textarea\", {\n      name: \"body\",\n      className: \"text-field\",\n      onChange: future => this.setState({\n        future\n      }),\n      value: this.state.future,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-default tat-submit\",\n      onClick: this.save,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default TAT;","map":{"version":3,"sources":["/Users/TMSulik/Dropbox/UW/clinical-psychometrics/client/src/components/TAT.js"],"names":["React","TextInput","tats","randomize","TAT","Component","state","tat","componentDidMount","setState","render","require","past","props","present","feeling","future","save"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport TextInput from '../components/TextInput';\nimport { tats } from '../services/Pictures';\nimport { randomize } from '../services/Shuffle';\nimport '../App.css';\n\nclass TAT extends React.Component {\n\n  state = { \n    tat: [],\n    // past: \"Nonsense\"\n  };\n\n  componentDidMount() {\n    randomize(tats);\n    this.setState({ tat: tats });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>THEMATIC APPERCEPTION TEST</h1>\n        <h4> Tell the most dramatic story you can think of about this picture.</h4>\n        <img src={require(`../images/tat-31.jpg`)} alt=\"apperception\" className=\"tat-image\" />\n        <div className=\"tat-directions clearfix\">\n          <div className=\"prompt\">\n            <h2>Instructions</h2>\n            <h4> Tell the most dramatic story you can think of about this picture.</h4>\n            <h4>What led up to the event depicted?</h4>\n            <textarea name=\"body\"\n              className=\"text-field\"\n              onChangeText={(past) => this.setState({past})}\n              value={this.state.past}\n            />\n            \n            <TextInput\n              {...this.props} // Inherit any props passed to it; e.g., multiline, numberOfLines below\n              editable = {true}\n              maxLength = {40}\n            />\n            <h4>What is happening at the moment?</h4>\n            <textarea name=\"body\"\n              className=\"text-field\"\n              onChange={(present) => this.setState({present})}\n              value={this.state.present}\n            />\n            <h4>What the people are feeling and thinking?</h4>\n            <textarea name=\"body\"\n              className=\"text-field\"\n              onChange={(feeling) => this.setState({feeling})}\n              value={this.state.feeling}\n            />\n            <h4>What will be a likely outcome?</h4>\n            <textarea name=\"body\"\n              className=\"text-field\"\n              onChange={(future) => this.setState({future})}\n              value={this.state.future}\n            />\n            <button className=\"btn btn-default tat-submit\" onClick={this.save}>Submit</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default TAT;"]},"metadata":{},"sourceType":"module"}